@model GridCoreSmart<AsientoAjusteCcbDto>
@{
    var alt = true;
    string clase = string.Empty;
    string sortDirInv = Model.SortDir.Equals("ASC") ? "DESC" : "ASC";
}

<div class="grid-golden">
    <div class="grid-golden-body">
        <div class="table-responsive text-nowrap table-wrapper">
            <table class="table table-sm mb-0 table-hover table-wrapper-fixed-head table-golden" id="tbAAJDet">
                <thead>
                    <tr class="header">
                        <th class="text-sm-center" scope="col">Mes</th>
                        <th class="text-sm-center" scope="col">Índice</th>
                        <th class="text-sm-center" scope="col">Coeficiente</th>
                        <th class="text-sm-center text-end" scope="col">Saldo</th>
                        <th class="text-sm-center text-end" scope="col">Ajuste</th>
                        <th class="text-sm-center text-end" scope="col">Saldo Ajustado</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListaDatos == null || Model.ListaDatos.Count == 0)
                    {
                        <tr>
                            <td colspan="6" class="text-center">No se han encontrado detalles de ajuste para las cuentas seleccionadas.</td>
                        </tr>
                    }
                    else
                    {
                        // Filas de datos
                        @foreach (var item in Model.ListaDatos)
                        {
                            if (alt) { clase = "alt"; alt = false; } else { clase = ""; alt = true; }
                            <tr class="@clase">
                                <td class="text-center">@ObtenerNombreMes(item.Mes)-@item.Periodo</td>
                                <td class="text-center">@Model.FormatearDato(item.Indice, FormatDato.Monto)</td>
                                <td class="text-center">@Model.FormatearDato(item.Coeficiente, FormatDato.Monto)</td>
                                <td class="text-end">@Model.FormatearDato(item.Saldo, FormatDato.Monto)</td>
                                <td class="text-end">@Model.FormatearDato(item.Ajuste, FormatDato.Monto)</td>
                                <td class="text-end">@Model.FormatearDato(item.Saldo_ajustado, FormatDato.Monto)</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="grid-golden-footer mt-3">
        <div class="row align-items-center">
            <div class="col-md-4">
                <div class="form-group mb-0">
                    <label class="form-label">Fecha De Asiento:</label>
                    <input type="text" class="form-control form-control-sm datepicker" id="fechaAsiento" />
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group mb-0">
                    <label class="form-label">Cuenta de Ajuste:</label>
                    <div class="input-group input-group-sm">
                        <input type="text" class="form-control" id="cuentaAjuste" placeholder="Cuenta de ajuste..." />
                        <button class="btn btn-outline-secondary" type="button" id="btnBuscarCuenta">
                            <i class="bx bx-search"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-3 text-end">
                <button class="btn btn-danger btn-sm" id="btnCancelarAjuste">
                    <i class="bx bx-x-circle me-1"></i>Cancelar
                </button>
                <button class="btn btn-success btn-sm" id="btnConfirmarAjuste">
                    <i class="bx bx-check-circle me-1"></i>Confirmar
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    private string ObtenerNombreMes(int mes)
    {
        return mes switch
        {
            1 => "Enero",
            2 => "Febrero",
            3 => "Marzo",
            4 => "Abril",
            5 => "Mayo",
            6 => "Junio",
            7 => "Julio",
            8 => "Agosto",
            9 => "Septiembre",
            10 => "Octubre",
            11 => "Noviembre",
            12 => "Diciembre",
            _ => mes.ToString().PadLeft(2, '0')
        };
    }
}
