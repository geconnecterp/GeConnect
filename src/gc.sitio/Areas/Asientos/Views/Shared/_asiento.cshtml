@model AsientoDetalleDto
@{
    var alt = true;
    string clase = string.Empty;
    bool desbalance = Model.TotalDebe != Model.TotalHaber;
    string totalClass = desbalance ? "total-desbalanceado" : "fw-bold";
    decimal diferencia = Model.TotalDebe - Model.TotalHaber;
    decimal diferenciaAbs = Math.Abs(diferencia);
    bool hayDiferencia = (diferenciaAbs > 0);
    string etiquetaDif = diferencia > 0 ? "Diferencia en el DEBE" : diferencia < 0 ? "Diferencia en el HABER" : "";
}
<div class="card mb-4">
    <div class="card-header py-2">
        <div class="row align-items-center">
            <div class="col-md-3">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Nº Mov</span>
                    <input type="text" class="form-control" readonly value="@Model?.Dia_movi" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Tipo Asiento</span>
                    @Html.DropDownList("Dia_tipo", ViewBag.ListaTiposAsiento as SelectList, new { @class = "form-control", @disabled = "disabled", @value = Model?.Dia_tipo })
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Desc</span>
                    <input type="text" class="form-control" id="Dia_desc_asiento" readonly value="@Model?.Dia_desc_asiento" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Fecha</span>
                    <input type="text" class="form-control" id="Dia_fecha" readonly value="@(Model?.Dia_fecha.ToString("dd/MM/yyyy"))" />
                </div>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-sm table-striped table-hover mb-0" id="tbAsientoDetalle">
                <thead class="table-dark">
                    <tr>
                        <th style="width: 15%">Cuenta</th>
                        <th style="width: 20%">Desc</th>
                        <th style="width: 40%">Concepto</th>
                        <th style="width: 12%" class="text-end">Debe</th>
                        <th style="width: 12%" class="text-end">Haber</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.Detalles != null && Model.Detalles.Any())
                    {
                        @foreach (var detalle in Model.Detalles)
                        {
                            if (alt) { clase = "table-primary"; alt = false; } else { clase = ""; alt = true; }
                            var cuentaVacia = string.IsNullOrWhiteSpace(detalle.Ccb_id);
                            <tr class="@clase" data-index="@detalle.Dia_nro">
                                <td class="@(cuentaVacia ? "cuenta-faltante" : "")" title="@(cuentaVacia ? "Falta definir la cuenta contable" : null)">
                                    <div class="d-flex align-items-center">
                                        <span class="cuenta-id">@detalle.Ccb_id</span>
                                        <button type="button" class="btn btn-sm btn-link text-primary btn-buscar-cuenta ms-1" style="display: none">
                                            <i class="bx bx-search"></i>
                                        </button>
                                    </div>
                                </td>
                                <td class="cuenta-desc">@detalle.Ccb_desc</td>
                                <td>@detalle.Dia_desc</td>
                                @* Usar el formato con punto decimal *@
                                <td class="text-end">@(detalle.Debe > 0 ? string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:#,##0.00}", detalle.Debe) : "0.00")</td>
                                <td class="text-end">@(detalle.Haber > 0 ? string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:#,##0.00}", detalle.Haber) : "0.00")</td>

                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No hay líneas de asiento para mostrar</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="table-dark">
                    <tr>
                        <td colspan="3" class="text-end fw-bold">Totales</td>
                        <td class="text-end @totalClass">
                            @Model?.TotalDebe.ToString("N2")
                            @if (desbalance)
                            {
                                <span title="Los totales no coinciden" class="ms-1">
                                    <i class="bx bx-error-circle"></i>
                                </span>
                            }
                        </td>
                        <td class="text-end @totalClass">
                            @Model?.TotalHaber.ToString("N2")
                            @if (desbalance)
                            {
                                <span title="Los totales no coinciden" class="ms-1">
                                    <i class="bx bx-error-circle"></i>
                                </span>
                            }
                        </td>
                    </tr>
                    @if (hayDiferencia)
                    {
                        <tr>
                            <td colspan="3" class="text-end fw-bold">@etiquetaDif</td>
                            <td colspan="2" class="text-end @(hayDiferencia ? "bg-black text-warning fw-bold" : "")">
                                @diferenciaAbs.ToString("N2")
                            </td>
                        </tr>
                    }
                </tfoot>
            </table>
        </div>
    </div>
    @* <div class="card-footer d-flex justify-content-between py-1">
        <button class="btn btn-sm btn-danger" id="btnCancelarAsiento">
            <i class="bx bx-x"></i> Cancelar
        </button>
        <div>
            <button class="btn btn-sm btn-secondary me-2" id="btnImprimir">
                <i class="bx bx-printer"></i> Imprimir
            </button>
            <button class="btn btn-sm btn-warning" id="btnPasarContabilidad">
                <i class="bx bx-transfer"></i> Pasar a contabilidad
            </button>
        </div>
    </div> *@
</div>
